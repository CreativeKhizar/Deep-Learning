import cv2
import numpy as np
def histogram_equalization(image_path):
      img = cv2.imread(image_path,cv2.IMREAD_GRAYSCALE)
      equalized = cv2.equalizeHist(img)

      cv2.imshow("Original Image",img)
      cv2.imshow('Equalized Image', equalized)
      cv2.waitKey(0)
      cv2.destroyAllWindows()
      # Example usage

histogram_equalization("Z:\Images\Treeimage4.jpg")


def thresholding(image_path, threshold_value=128):
    img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    _, thresholded = cv2.threshold(img, threshold_value, 255, cv2.THRESH_BINARY)

    cv2.imshow('Original Image', img)
    cv2.imshow('Thresholded Image', thresholded)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage
thresholding('Z:\Images\Treeimage4.jpg', threshold_value=128)

import cv2
import numpy as np
def edge_detection(image_path):
    img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    edges = cv2.Canny(img, 100, 200)

    cv2.imshow('Original Image', img)
    cv2.imshow('Edges', edges)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage
edge_detection('Z:\Images\Treeimage4.jpg')


def data_augmentation(image_path):
    img = cv2.imread(image_path)

    # Example: Horizontal Flip
    flipped = cv2.flip(img, 1)

    cv2.imshow('Original Image', img)
    cv2.imshow('Flipped Image', flipped)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage
data_augmentation('Z:\Images\Treeimage4.jpg')


def morphological_operations(image_path):
    img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

    # Example: Erosion
    kernel = np.ones((5, 5), np.uint8)
    erosion = cv2.erode(img, kernel, iterations=1)

    cv2.imshow('Original Image', img)
    cv2.imshow('Erosion', erosion)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage
morphological_operations('Z:\Images\Treeimage4.jpg')

